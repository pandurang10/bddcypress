{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-09-11T13:42:12.752Z",
    "end": "2021-09-11T13:42:51.005Z",
    "duration": 38253,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "65b5bb58-919a-45ad-ac55-0eca59326dd1",
      "title": "",
      "fullFile": "cypress/integration/examples/BDD/cricketer.feature",
      "file": "cypress/integration/examples/BDD/cricketer.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bf5387ff-cbd3-4a67-9cb1-b33b0e3da6b3",
          "title": "End to end Cricker Search",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Outline Scenario example (example #1)",
              "fullTitle": "End to end Cricker Search Outline Scenario example (example #1)",
              "timedOut": null,
              "duration": 8052,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "40f17295-ff0a-46a9-887f-fc4ec128037f",
              "parentUUID": "bf5387ff-cbd3-4a67-9cb1-b33b0e3da6b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Outline Scenario example (example #2)",
              "fullTitle": "End to end Cricker Search Outline Scenario example (example #2)",
              "timedOut": null,
              "duration": 5836,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4ee98ca1-9ea2-4fe2-bbfb-3e4849d1bffd",
              "parentUUID": "bf5387ff-cbd3-4a67-9cb1-b33b0e3da6b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Outline Scenario example (example #3)",
              "fullTitle": "End to end Cricker Search Outline Scenario example (example #3)",
              "timedOut": null,
              "duration": 6411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4b205225-41d5-446f-ad53-15f7413e350a",
              "parentUUID": "bf5387ff-cbd3-4a67-9cb1-b33b0e3da6b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Outline Scenario example (example #4)",
              "fullTitle": "End to end Cricker Search Outline Scenario example (example #4)",
              "timedOut": null,
              "duration": 6711,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1113cbcf-7eb3-45cb-9ed4-9c137e6711f8",
              "parentUUID": "bf5387ff-cbd3-4a67-9cb1-b33b0e3da6b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Outline Scenario example (example #5)",
              "fullTitle": "End to end Cricker Search Outline Scenario example (example #5)",
              "timedOut": null,
              "duration": 7231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "eae77b2a-c614-461e-a7be-76cc918a90ba",
              "parentUUID": "bf5387ff-cbd3-4a67-9cb1-b33b0e3da6b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40f17295-ff0a-46a9-887f-fc4ec128037f",
            "4ee98ca1-9ea2-4fe2-bbfb-3e4849d1bffd",
            "4b205225-41d5-446f-ad53-15f7413e350a",
            "1113cbcf-7eb3-45cb-9ed4-9c137e6711f8",
            "eae77b2a-c614-461e-a7be-76cc918a90ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "useInlineDiffs": false
      },
      "version": "4.0.1"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}